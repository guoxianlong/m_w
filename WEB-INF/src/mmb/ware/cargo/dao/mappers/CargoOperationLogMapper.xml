<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="mmb.ware.cargo.dao.mappers.CargoOperationLogMapper" >
  <resultMap id="BaseResultMap" type="mmb.ware.cargo.model.CargoOperationLog" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="oper_id" property="operId" jdbcType="INTEGER" />
    <result column="oper_datetime" property="operDatetime" jdbcType="TIMESTAMP" />
    <result column="oper_admin_id" property="operAdminId" jdbcType="INTEGER" />
    <result column="oper_admin_name" property="operAdminName" jdbcType="VARCHAR" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="mmb.ware.cargo.model.CargoOperationLog" extends="BaseResultMap" >
    <result column="remark" property="remark" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, oper_id, oper_datetime, oper_admin_id, oper_admin_name
  </sql>
  <sql id="Blob_Column_List" >
    remark
  </sql>
  <insert id="insert" parameterType="mmb.ware.cargo.model.CargoOperationLog" useGeneratedKeys="true" keyProperty="id">
    insert into cargo_operation_log (id, oper_id, oper_datetime, 
      oper_admin_id, oper_admin_name, remark
      )
    values (#{id,jdbcType=INTEGER}, #{operId,jdbcType=INTEGER}, #{operDatetime,jdbcType=TIMESTAMP}, 
      #{operAdminId,jdbcType=INTEGER}, #{operAdminName,jdbcType=VARCHAR}, #{remark,jdbcType=LONGVARCHAR}
      )
  </insert>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from cargo_operation_log
    where id = #{id,jdbcType=INTEGER}
  </select>  
  <select id="selectByPrimaryKeySlave" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from cargo_operation_log
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectByCondition" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from cargo_operation_log
    where ${_parameter} LIMIT 1
  </select>
  <select id="selectByConditionSlave" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from cargo_operation_log
    where ${_parameter} LIMIT 1
  </select>
  <select id="selectList" resultMap="BaseResultMap" parameterType="java.util.HashMap" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from cargo_operation_log
        where ${condition} 
		<if test="orderBy != null"> order by ${orderBy}</if>
		<if test="index > -1" > limit ${index}</if>
		<if test="count > 0 ">,${count}</if>
  </select>
  <select id="selectListSlave" resultMap="BaseResultMap" parameterType="java.util.HashMap" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from cargo_operation_log
        where ${condition} 
		<if test="orderBy != null"> order by ${orderBy}</if>
		<if test="index > -1" > limit ${index}</if>
		<if test="count > 0 ">,${count}</if>
  </select>
  <select id="selectCount" resultType="java.lang.Integer" parameterType="java.lang.String" >
    select 
    COUNT(*)
    from cargo_operation_log
    where ${_parameter}
  </select>
  <select id="selectCountSlave" resultType="java.lang.Integer" parameterType="java.lang.String" >
    select 
    COUNT(*)
    from cargo_operation_log
    where ${_parameter}
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from cargo_operation_log
    where id = #{id,jdbcType=INTEGER}
  </delete>
  
  <update id="updateByCondition" parameterType="java.util.HashMap" >
  	update cargo_operation_log
  	SET ${set}
  	WHERE ${condition}
  </update>
</mapper>